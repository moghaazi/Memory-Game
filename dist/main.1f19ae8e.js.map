{"version":3,"sources":["main.js"],"names":["module","hot","accept","imgs","document","querySelectorAll","hasShow","lockImg","firstImg","secImg","showImg","classList","add","checkMatc","dataset","img","disableImg","unflipImg","removeEventListener","resetBoard","setTimeout","remove","shuffleImgs","forEach","randomImgs","Math","floor","random","style","order","addEventListener"],"mappings":"AAAA;AACA,IAAIA,MAAM,CAACC,GAAX,EAAgB;AACdD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX;AACD;;AAED,IAAIC,IAAI,GAAGC,QAAQ,CAACC,gBAAT,gBAAX;AAEA,IAAIC,OAAO,GAAG,KAAd;AACA,IAAIC,OAAO,GAAG,KAAd;AACA,IAAIC,QAAJ,EAAcC,MAAd,EAEA;;AACA,SAASC,OAAT,GAAmB;AACjB,MAAIH,OAAJ,EAAa;AACb,MAAI,SAASC,QAAb,EAAuB;AACvB,OAAKG,SAAL,CAAeC,GAAf;;AACA,MAAI,CAACN,OAAL,EAAc;AACZ;AACAA,IAAAA,OAAO,GAAG,IAAV;AACAE,IAAAA,QAAQ,GAAG,IAAX;AAEA;AACD,GAVgB,CAYjB;;;AACAC,EAAAA,MAAM,GAAG,IAAT;AAEAI,EAAAA,SAAS;AACV,EAED;;;AACA,IAAIA,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBL,EAAAA,QAAQ,CAACM,OAAT,CAAiBC,GAAjB,KAAyBN,MAAM,CAACK,OAAP,CAAeC,GAAxC,GAA8CC,UAAU,EAAxD,GAA6DC,SAAS,EAAtE;AACD,CAFD,EAIA;;;AACA,IAAID,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBR,EAAAA,QAAQ,CAACU,mBAAT,UAAsCR,OAAtC;AACAD,EAAAA,MAAM,CAACS,mBAAP,UAAoCR,OAApC;AAEAS,EAAAA,UAAU;AACX,CALD,EAOA;;;AACA,IAAIF,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBV,EAAAA,OAAO,GAAG,IAAV;AACAa,EAAAA,UAAU,CAAC,YAAM;AACfZ,IAAAA,QAAQ,CAACG,SAAT,CAAmBU,MAAnB;AACAZ,IAAAA,MAAM,CAACE,SAAP,CAAiBU,MAAjB;AAEAF,IAAAA,UAAU;AACX,GALS,EAKP,GALO,CAAV;AAMD,CARD,EAUA;;;AACA,IAAIA,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB;AAAEb,EAAAA,OADmB,GACE,KADF;AACVC,EAAAA,OADU,GACS,KADT;AAEnBC,EAAAA,QAFmB,GAEE,IAFF;AAETC,EAAAA,MAFS,GAEQ,IAFR;AAGtB,CAHD,CAKA;AALA;;AAMC,CAAC,SAASa,WAAT,GAAuB;AACvBnB,EAAAA,IAAI,CAACoB,OAAL,CAAa,UAAAR,GAAG,EAAI;AAClB,QAAIS,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAjB;AACAZ,IAAAA,GAAG,CAACa,KAAJ,CAAUC,KAAV,GAAkBL,UAAlB;AACD,GAHD;AAID,CALA;;AAODrB,IAAI,CAACoB,OAAL,CAAa,UAAAR,GAAG;AAAA,SAAIA,GAAG,CAACe,gBAAJ,UAA8BpB,OAA9B,CAAJ;AAAA,CAAhB","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["// HMR\r\nif (module.hot) {\r\n  module.hot.accept()\r\n}\r\n\r\nlet imgs = document.querySelectorAll(`.memory-card`)\r\n\r\nlet hasShow = false\r\nlet lockImg = false\r\nlet firstImg, secImg\r\n\r\n// Show Img\r\nfunction showImg() {\r\n  if (lockImg) return\r\n  if (this === firstImg) return\r\n  this.classList.add(`flip`)\r\n  if (!hasShow) {\r\n    // First click\r\n    hasShow = true\r\n    firstImg = this\r\n\r\n    return\r\n  }\r\n\r\n  // Second click\r\n  secImg = this\r\n\r\n  checkMatc()\r\n}\r\n\r\n// Chech Match\r\nlet checkMatc = () => {\r\n  firstImg.dataset.img === secImg.dataset.img ? disableImg() : unflipImg()\r\n}\r\n\r\n// Disable Img\r\nlet disableImg = () => {\r\n  firstImg.removeEventListener(`click`, showImg)\r\n  secImg.removeEventListener(`click`, showImg)\r\n\r\n  resetBoard()\r\n}\r\n\r\n// Unflip Img\r\nlet unflipImg = () => {\r\n  lockImg = true\r\n  setTimeout(() => {\r\n    firstImg.classList.remove(`flip`)\r\n    secImg.classList.remove(`flip`)\r\n\r\n    resetBoard()\r\n  }, 500)\r\n}\r\n\r\n// Reset Board\r\nlet resetBoard = () => {\r\n  ;[hasShow, lockImg] = [false, false]\r\n  ;[firstImg, secImg] = [null, null]\r\n}\r\n\r\n// Shuffle Imgs\r\n;(function shuffleImgs() {\r\n  imgs.forEach(img => {\r\n    let randomImgs = Math.floor(Math.random() * 20)\r\n    img.style.order = randomImgs\r\n  })\r\n})()\r\n\r\nimgs.forEach(img => img.addEventListener(`click`, showImg))\r\n"]}